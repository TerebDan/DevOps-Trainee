pipeline {
    agent any
    environment {
        MAIL = credentials('mail')
        USER = credentials('user_name')
        TG_TOKEN = credentials('tg_notofocations_token')
        TG_ID = credentials('tg_notifications_id')
    }
    stages {    
        stage('Build') {
            steps {
                git branch: 'master', credentialsId: 'ssh_key_jenkins', url: 'git@github.com:TerebDan/DevOps-Trainee.git'
                sh 'cd /var/jenkins_home/workspace/DevOps-Trainee_master'
                sh 'git config --global user.email "${MAIL}"'
                sh 'git config --global user.name "${USER}"'
                script {
                    try {
                        sh 'git branch -D staging'
                    } catch (Exception e) {
                        echo 'branch does not exist'
                    }
                }
                sh 'git checkout -b staging'
                sh 'git merge accu81'
                sh '/var/jenkins_home/workspace/DevOps-Trainee_accu87/accu81/dns-changer.sh testDan'
            }

            post {
                success {
                    sh 'echo "Build: all fine"'
                }
                failure {
                    sh 'echo "Build: fail"'
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    remote_ip = sh (
                        script: 'dig @adelaide.ns.cloudflare.com vm20.admon.com +short',
                        returnStdout: true
                    ).trim()

                    host_ip = sh (
                        script: 'hostname -I',
                        returnStdout: true
                    ).trim()

                    if (remote_ip != host_ip){
                        error "test failed"
                    }
                }
            }

            post {
                success {
                    sh 'git commit --allow-empty -m "Verified by CI/CD Jenkins"'
                    withCredentials([sshUserPrivateKey(credentialsId: 'ssh_key_jenkins', keyFileVariable: 'SSH_KEY')]) {
                        sh 'echo ssh -i $SSH_KEY -l git -o StrictHostKeyChecking=no \\"\\$@\\" > local_ssh.sh'
                        sh 'chmod +x local_ssh.sh'
                        withEnv(['GIT_SSH=./local_ssh.sh']) {
                            sh 'git push origin staging'
                        }
                    }
                    sh 'echo "Test: all fine"'
                }

                failure {
                    sh "curl \"https://api.telegram.org/bot${TG_TOKEN}/sendMessage?chat_id=${TG_ID}&text=JOB: ${env.JOB_NAME} Fail\""
                }
            }
        }
    } 
}
